---
title: "TheKidsBiostatsTemplate"
subtitle: "A biostatistics report template"
author:
  name: "J Smith, Biostatistician"
  affiliation:
  - "The Kids Research Institute Australia, Perth, WA, Australia"
date: "`r format(Sys.time(), '%d %B %Y')`"
title-block-banner: "#1F3B73"
format:
  html:
    embed-resources: true
    code-fold: true
    toc: true
    toc-location: left
    html-table-processing: none
    self-contained: true
    mainfont: "Barlow"
    include-in-header: 
      text: |
        <style>
          @import url('https://fonts.googleapis.com/css2?family=Barlow&display=swap');
        </style>
reference-location: margin 
citation-location: margin 
css: _extensions/html/styles.css
editor_options: 
  chunk_output_type: inline
execute:
  echo: true
  warning: false
  error: true
callout-icon: false
---

```{r}
#| code-fold: false
library(thekidsbiostats)
```

Use `mtcars` as validation:

```{r}
#| code-fold: false
dat <- mtcars %>% head(n = 10)
```


# a) Testing Error/Warning Messages

## 1) Font fallback

Barlow is installed on this system, so it should show up by default.

```{r}
#| code-fold: false

dat %>%
  thekids_table()
```
::: column-margin
Indeed.
:::

Now specify a non-standard font not installed on my system:

```{r message=TRUE}
#| code-fold: false

dat %>%
  thekids_table(font_family = "xyz")
```
::: column-margin
Sans looks to have worked here.
:::

## 2) Colours

Specifying a "The Kids" colour:

```{r}
dat %>%
  thekids_table(colour = "Saffron")
```

Specifying a non "The Kids" colour:

```{r message=TRUE, warning=TRUE}
#| code-fold: false
dat %>%
  thekids_table(colour = "Orange")
```
::: column-margin
Nice.
:::

## 3) Zebra + Highlight

```{r message=TRUE, warning=TRUE}
#| code-fold: false
dat %>%
  thekids_table(zebra = TRUE, highlight = c(1, 2, 3))
```
::: column-margin
Nice.
:::

## 4) Highlighting row outside of the table

```{r}
#| code-fold: false
dat %>%
  thekids_table(highlight = 11)
```

## 5) Class `knitr_kable` tables

```{r}
dat %>%
  knitr::kable() %>%
  thekids_table()
```
::: column-margin
Nice.
:::

## 6) Non-natural number selected

```{r}
#| code-fold: false

dat %>%
  thekids_table(highlight = 1.2)
```

```{r}
#| code-fold: false

dat %>%
  thekids_table(highlight = -1)
```

```{r}
#| code-fold: false

dat %>%
  thekids_table(highlight = 0)
```

## 7) Class `flextable` objects

```{r warning=TRUE}
#| code-fold: false

dat %>%
  flextable() %>%
  thekids_table()
```


# b) Check `flextable_default` handling

First, extract out the existing flextable defaults:

```{r}
#| code-fold: false

get_flextable_defaults()
```

Therefore:

```{r}
#| code-fold: false

dat %>%
  flextable()
```

Now, let's globally set a flextable default:

```{r}
#| code-fold: false

set_flextable_defaults(font.size = 5 # Arbitrarily small font size
                       )

get_flextable_defaults()
```

Therefore:

```{r}
#| code-fold: false

dat %>%
  flextable()
```

Now, with these **global** flextable defaults set, let's use `thekids_table`:

```{r}
#| code-fold: false

dat %>%
  thekids_table()
```

Now, let's check the global flextable defaults to ensure what we originally set are preserved (i.e., with `font.size=5`):

```{r}
#| code-fold: false

get_flextable_defaults()
```

And, to be sure, plot another flextable:

```{r}
#| code-fold: false

dat %>%
  flextable()
```


::: callout-note
Success!
:::

```{r}
init_flextable_defaults() # Preserve existing flextable defaults
```


# c) Parsing Formatted `flextable`

Start with this:

```{r}
#| code-fold: false
dat %>%
  flextable() %>%
  flextable::highlight(j = 5, color = "yellow") %>%
  bold(i = 6, j = 3, bold = TRUE) %>%
  color(i = 6, j = 3, color = "red")
```
::: column-margin
+ Highlight the values of the `drat` (rear axle ratio) volumn.
+ Make one value of `disp` red.
:::

Now applying `thekids_table`:

```{r}
#| code-fold: false
dat %>%
  flextable() %>%
  highlight(j = 5, color = "yellow") %>%
  bold(i = 6, j = 3, bold = TRUE) %>%
  color(i = 6, j = 3, color = "red") %>%
  thekids_table()
```
::: column-margin
+ **This does not look to work.**
  + This is because the global flextable defaults are confused.
    + Defaults can only be set **once**--strictly *before* the flextable is created.
    + By calling `flextable` first, we are using the globally set flextable defaults which `thekids_table` cannot override.
  + Understandably, the "red" `disp` cell is now black.
    + See line 110 of `thekids_table.R`--forces font colour to be `#111921` in body.
:::

If we instead call `thekids_table` first, we can still apply the required formatting.

```{r}
#| code-fold: false

dat %>%
  thekids_table() %>%
  highlight(j = 5, color = "yellow") %>%
  bold(i = 6, j = 3, bold = TRUE) %>%
  color(i = 6, j = 3, color = "red")
```

# d) Check functionalities

## 1) Highlight

```{r}
#| code-fold: true
dat %>%
  thekids_table(highlight = c(1, 7, 9))
```

## 2) Zebra

```{r}
#| code-fold: false

dat %>%
  thekids_table(zebra = TRUE, colour = "Saffron")
```

## 3) Other parameters to `set_flextable_defaults`

Start with our "standard" table:
  
```{r}
#| code-fold: false

dat %>%
  thekids_table(colour = "AzureBlue")
```

Now, set `padding.top` and `padding.bottom`:

```{r}
#| code-fold: false

dat %>%
  thekids_table(colour = "AzureBlue",
                padding.top = 10,
                padding.bottom = 10)
```


## Reproducibility Information

```{r}
sessionInfo()
```

